name: Publish to npm, Tag and GH Release

on:
  push:
    branches:
      - 'testnet-feature-**'

env:
  gha-role-name: "GitHubAction-AssumeRoleWithAction"
  aws-region: "us-west-1"
  dockerfile-path: "./Dockerfile"
  composefile-path: "./docker-compose.yaml"
  NETWORK: "tn-testnet"
  ecr-repo-aws-region: "us-west-1"
  VALIDATOR_ROLE: "validator"
  EXPLORER_ROLE: "explorer"

jobs:

  print_timestamp:
    uses: treasurenetprotocol/reusable-workflows/.github/workflows/reusable-timestamp.yml@main

  EnvSetup:
    needs: [ print_timestamp ]
    name: Setup Environment
    runs-on: self-hosted
    outputs:
      gha-role-name: ${{ steps.set-aws-info.outputs.gha-role-name }}
      repo-name: ${{ steps.extract-repo-name.outputs.repo-name }}
      aws-secret-name: ${{ steps.extract-repo-name.outputs.secret-name }}
      aws-region: ${{ steps.set-aws-info.outputs.aws-region }}
      ecr-repo: ${{ steps.extract-repo-name.outputs.repo-name }}
      ecr-repo-aws-region: ${{ steps.set-aws-info.outputs.ecr-repo-aws-region }}
    steps:
      - name: Extract repo name
        id: extract-repo-name
        run: |
          REPO_NAME="${{ github.repository }}"
          SHORT_NAME=${REPO_NAME##*/}
          echo "repo-name=$SHORT_NAME" >> $GITHUB_OUTPUT
          echo "secret-name=testnet/$SHORT_NAME" >>$GITHUB_OUTPUT

      - name: set-aws-info
        id: set-aws-info
        run: |
          echo "aws-region=${{ env.aws-region }}" >> $GITHUB_OUTPUT
          echo "gha-role-name=${{ env.gha-role-name }}" >> $GITHUB_OUTPUT
          echo "ecr-repo-aws-region=${{ env.ecr-repo-aws-region }}" >> $GITHUB_OUTPUT
          echo "gha-role-name=${{ env.gha-role-name }}" >> $GITHUB_OUTPUT

  

  get-public-ip:
    needs: [ EnvSetup ]
    runs-on: self-hosted
    outputs:
      public_ip: ${{ steps.get-public-ip.outputs.public_ip }}
    steps:
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: arn:aws:iam::381492270411:role/full-ec2
      #     aws-region: us-west-1
      #     role-session-name: github-actions
      #     audience: GitHub_to_AWS_via_FederatedOIDC_test

      - name: Get Public IP of blockscout instance
        id: get-public-ip
        run: |
          public_ip=$(aws ec2 describe-instances \
            --region ${{ needs.EnvSetup.outputs.aws-region }} \
            --filters "Name=tag:Name,Values=blockscout" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)
          echo "public_ip=$public_ip" >> $GITHUB_OUTPUT

  deploy:
    needs: [ get-public-ip , EnvSetup ]
    uses: treasurenetprotocol/reusable-workflows/.github/workflows/reusable-blockscout-deployment.yml@feat/add_job_deployment
    with:
      gha-role-name: ${{ needs.EnvSetup.outputs.gha-role-name }}
      repo-name: ${{ needs.EnvSetup.outputs.repo-name }}
      aws-region: ${{ needs.EnvSetup.outputs.aws-region }}
      aws-secret-name: ${{ needs.EnvSetup.outputs.aws-secret-name }}
    secrets:
      AWS_MANAGEMENT_ACCOUNT: ${{ secrets.AWS_MANAGEMENT_ACCOUNT }}
      AWS_TARGET_ACCOUNT: ${{ secrets.AWS_TESTNET_ACCOUNT }}
      EC2_SSH_KEY: ${{ secrets.AWS_EC2_EEXPLORER_TESTNET_SSH_KEY }}
      EC2_USER: ${{ secrets.AWS_EC2_EEXPLORER_TESTNET_USER }}
      EC2_HOST: ${{ needs.get-public-ip.outputs.public_ip }}
